use super::*;

#[test]
fn test_find_simple() {
    let data = &[
        "banana",
        "apple",
        "pineapple tree",
    ];
    let matcher = SubstringMatcher::new(data.iter().map(|s| s.as_ref()));
    let mut result = matcher.find("apple");
    result.sort();
    assert_eq!(result, &["apple", "pineapple tree"]);
}

#[test]
fn test_find_unicode() {
    let data = &[

        "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000000000000000000000001",
        "000000000000000000000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000000000000000001",
        "0000000000000000000000000000000000000000000000001", "000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000000", "0000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000001", "000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000",
        "00000000000000000000000000000000000000á´…",
        "000000000000000000000000000000000000", "00000000000000000000000000000000000",
        "0000000000000000000000000000000000", "000000000000000000000000000000000", "00000000000000000000000000000000",
        "0000000000000000000000000000000", "0000000000000000000000000000001", "000000000000000000000000000000",
        "00000000000000000000000000000", "0000000000000000000000000000", "000000000000000000000000000",
        "0000000000000000000000000", "0000000000000000000000001", "000000000000000000000000", "00000000000000000000000",
        "00000000000000000000001", "0000000000000000000000", "0000000000000000000001", "000000000000000000000"];
    let matcher = SubstringMatcher::new(data.iter().map(|s| s.as_ref()));
    let result = matcher.find("0");
    assert!(result.contains(&"00000000000000000000000"));
    assert_eq!(result.len(), data.len());
}

#[test]
fn test_find_bug() {
    let data = &[

        "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000000000000000000000001",
        "000000000000000000000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000000000000000001",
        "0000000000000000000000000000000000000000000000001", "000000000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000000", "0000000000000000000000000000000000000000",
        "0000000000000000000000000000000000000001", "000000000000000000000000000000000000000",
        "00000000000000000000000000000000000000",
        "000000000000000000000000000000000000", "00000000000000000000000000000000000",
        "0000000000000000000000000000000000", "000000000000000000000000000000000", "00000000000000000000000000000000",
        "0000000000000000000000000000000", "0000000000000000000000000000001", "000000000000000000000000000000",
        "00000000000000000000000000000", "0000000000000000000000000000", "000000000000000000000000000",
        "0000000000000000000000000", "0000000000000000000000001", "000000000000000000000000", "00000000000000000000000",
        "00000000000000000000001", "0000000000000000000000", "0000000000000000000001", "000000000000000000000"];
    let matcher = SubstringMatcher::new(data.iter().map(|s| s.as_ref()));
    let result = matcher.find("\x7f");
    assert_eq!(result.len(), 0);
}
